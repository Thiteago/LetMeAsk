{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","assets/images/google-icon.svg","components/Button.tsx","services/firebase.ts","contexts/AuthContext.tsx","hooks/useAuth.ts","pages/Home.tsx","pages/NewRoom.tsx","pages/Room.tsx","App.tsx","index.tsx"],"names":["Button","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","Home","history","useHistory","push","src","illustrationImg","alt","logoImg","onClick","googleIconImg","type","placeholder","NewRoom","newRoom","setNewRoom","event","preventDefault","trim","roomRef","ref","title","authorId","firebaseRoom","key","onSubmit","onChange","target","to","Room","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.639aa64c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.ae7276f0.svg\";","export default __webpack_public_path__ + \"static/media/logo.a88331cb.svg\";","export default __webpack_public_path__ + \"static/media/google-icon.df15d8e5.svg\";","import {ButtonHTMLAttributes} from 'react'\r\nimport '../styles/button.scss'\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\n\r\nexport function Button(props :ButtonProps) {\r\n    return(\r\n        <button className=\"button\" {...props}/>\r\n            \r\n    )\r\n}\r\n","import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { firebase, auth, database}","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { auth, firebase } from \"../services/firebase\";\r\n\r\ntype User = {\r\n    id: string;\r\n    name: string;\r\n    avatar: string;\r\n}\r\n  \r\ntype AuthContextType ={\r\n    user: User | undefined;\r\n    signInWithGoogle: () => Promise<void>;\r\n}\r\n\r\n\r\ntype AuthContextProviderProps = {\r\n    children : ReactNode;\r\n}\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\n\r\n\r\nexport function AuthContextProvider(props: AuthContextProviderProps) {\r\n    const [user, setUser] = useState<User>();\r\n\r\n    useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n        if(user){\r\n        const {displayName, photoURL, uid} = user\r\n\r\n        if(!displayName || !photoURL){\r\n            throw new Error('Missing information from Google Account.');\r\n        }\r\n\r\n        setUser({\r\n            id: uid,\r\n            name: displayName,\r\n            avatar: photoURL\r\n        })\r\n        }\r\n    })\r\n    return() => {\r\n        unsubscribe();\r\n    }\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    async function signInWithGoogle(){\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n      \r\n        const result = await auth.signInWithPopup(provider);\r\n          if(result.user){\r\n            const {displayName, photoURL, uid} = result.user\r\n      \r\n            if(!displayName || !photoURL){\r\n              throw new Error('Missing information from Google Account.');\r\n            }\r\n      \r\n            setUser({\r\n              id: uid,\r\n              name: displayName,\r\n              avatar: photoURL\r\n            })\r\n          }\r\n      }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <AuthContext.Provider value={{user, signInWithGoogle}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import {useContext} from 'react';\r\nimport {AuthContext} from '../contexts/AuthContext'\r\n\r\nexport function useAuth(){\r\n    const value = useContext(AuthContext)\r\n\r\n    return value;\r\n}","import {useHistory} from 'react-router-dom'\r\nimport illustrationImg from '../assets/images/illustration.svg'\r\nimport logoImg from '../assets/images/logo.svg'\r\nimport googleIconImg from '../assets/images/google-icon.svg'\r\nimport {Button} from '../components/Button'\r\nimport '../styles/auth.scss'\r\nimport { useAuth } from '../hooks/useAuth'\r\n\r\nexport function Home(){\r\n    const history = useHistory();\r\n    const {user, signInWithGoogle} = useAuth();\r\n\r\n\r\n    async function handleCreateRoom(){\r\n        if(!user){\r\n           await signInWithGoogle()\r\n        }\r\n\r\n        history.push('/rooms/new');\r\n    }\r\n\r\n    return(\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={illustrationImg} alt=\"ilustração símbolizando perguntas e respostas\" />\r\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n                <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n            </aside>\r\n            <main>\r\n                <div className=\"main-content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <button onClick={handleCreateRoom} className=\"create-room\">\r\n                        <img src={googleIconImg} alt=\"Logo do Google\" />\r\n                        Crie sua sala com o Google\r\n                    </button>\r\n                    <div className=\"separator\">ou entre em uma sala</div>\r\n                    <form>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Digite o código da sala\"\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Entrar na sala\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import {Link, useHistory} from 'react-router-dom'\r\nimport {FormEvent} from 'react'\r\nimport illustrationImg from '../assets/images/illustration.svg'\r\nimport logoImg from '../assets/images/logo.svg'\r\nimport {Button} from '../components/Button'\r\nimport { useAuth } from '../hooks/useAuth'\r\nimport '../styles/auth.scss'\r\nimport { useState } from 'react'\r\nimport { database } from '../services/firebase'\r\nimport userEvent from '@testing-library/user-event'\r\n\r\nexport function NewRoom(){\r\n    const {user} = useAuth();\r\n    const history = useHistory();\r\n\r\n    const [newRoom, setNewRoom] = useState('');\r\n\r\n    async function handleCreateRoom(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        if (newRoom.trim() === ''){\r\n            return;\r\n        }\r\n\r\n        const roomRef = database.ref('rooms');\r\n\r\n        const firebaseRoom = await roomRef.push({\r\n            title: newRoom,\r\n            authorId: user?.id,\r\n        })\r\n\r\n\r\n        history.push(`/rooms/${firebaseRoom.key}`)\r\n    }\r\n\r\n    return(\r\n        <div id=\"page-auth\">\r\n            <aside>\r\n                <img src={illustrationImg} alt=\"ilustração símbolizando perguntas e respostas\" />\r\n                <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n                <p>Tire as dúvidas da sua audiência em tempo-real</p>\r\n            </aside>\r\n            <main>\r\n                <div className=\"main-content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <h2>Criar uma nova sala</h2>\r\n                    <form onSubmit={handleCreateRoom}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Nome da sala\"\r\n                            onChange={event => setNewRoom(event.target.value)}\r\n                            value={newRoom}\r\n                        />\r\n                        <Button type=\"submit\">\r\n                            Criar sala\r\n                        </Button>\r\n                    </form>\r\n                    <p>Quer entrar em uma sala existente ? <Link to=\"/\">clique aqui</Link></p>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}","export function Room() {\r\n    return(\r\n        <h1>sala</h1>\r\n    );\r\n}","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport {Home} from \"./pages/Home\"\nimport {NewRoom} from \"./pages/NewRoom\"\nimport {AuthContextProvider} from './contexts/AuthContext';\nimport { Room } from './pages/Room';\n\nfunction App() {\n\n\n  return (\n    <BrowserRouter>\n      <AuthContextProvider>\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/rooms/new\" component={NewRoom}/>\n          <Route path=\"/rooms/:id\" component={Room}/>\n        </Switch>\n      </AuthContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './services/firebase';\n\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}